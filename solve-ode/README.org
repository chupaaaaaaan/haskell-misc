* solve-ode

** 目的

常微分方程式を解くためのシンプルなソルバ

** インストール方法

- ~stack.yaml~
  #+begin_example
  extra-deps:
  - github: chupaaaaaaan/haskell-misc
    commit: XXX
    subdirs:
      - solve-ode
  #+end_example

** 使い方

- stack script: Euler法でローレンツ方程式を解く場合
  #+begin_src haskell
    lorenz :: Double -> Double -> Double -> ODE
    lorenz p r b = \vec -> let v = vec.x
                               x' = -p * v!0 + p * v!1
                               y' = -v!0 * v!2 + r * v!0 - v!1
                               z' = v!0 * v!1 - b * v!2
                           in mkVec vec.t [x', y', z']

    trajectory :: [Vec]
    trajectory = solveByEuler 0.01 (lorenz 10 28 (8.0/3.0)) tmax $ V 0 (vector [1,1,1])

    main :: IO ()
    main = mapM_ print trajectory
  #+end_src
